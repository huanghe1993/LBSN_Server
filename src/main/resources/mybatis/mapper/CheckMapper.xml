<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huanghe.lbsn.Mapper.CheckMapper" >
  <resultMap id="BaseResultMap" type="com.huanghe.lbsn.Entity.Check" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="poi_id" property="poiId" jdbcType="INTEGER" />
    <result column="poi_name" property="poiName" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="longitude" property="longitude" jdbcType="REAL" />
    <result column="rate" property="rate" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, poi_id, poi_name, latitude, longitude, rate, content, createTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.huanghe.lbsn.Entity.CheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huanghe.lbsn.Entity.CheckExample" >
    delete from check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanghe.lbsn.Entity.Check" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into check (user_id, poi_id, poi_name, 
      latitude, longitude, rate, 
      content, createTime)
    values (#{userId,jdbcType=INTEGER}, #{poiId,jdbcType=INTEGER}, #{poiName,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=REAL}, #{longitude,jdbcType=REAL}, #{rate,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.huanghe.lbsn.Entity.Check" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="poiId != null" >
        poi_id,
      </if>
      <if test="poiName != null" >
        poi_name,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="poiId != null" >
        #{poiId,jdbcType=INTEGER},
      </if>
      <if test="poiName != null" >
        #{poiName,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=REAL},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huanghe.lbsn.Entity.CheckExample" resultType="java.lang.Integer" >
    select count(*) from check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update check
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.poiId != null" >
        poi_id = #{record.poiId,jdbcType=INTEGER},
      </if>
      <if test="record.poiName != null" >
        poi_name = #{record.poiName,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update check
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      poi_id = #{record.poiId,jdbcType=INTEGER},
      poi_name = #{record.poiName,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=REAL},
      longitude = #{record.longitude,jdbcType=REAL},
      rate = #{record.rate,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanghe.lbsn.Entity.Check" >
    update check
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="poiId != null" >
        poi_id = #{poiId,jdbcType=INTEGER},
      </if>
      <if test="poiName != null" >
        poi_name = #{poiName,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanghe.lbsn.Entity.Check" >
    update check
    set user_id = #{userId,jdbcType=INTEGER},
      poi_id = #{poiId,jdbcType=INTEGER},
      poi_name = #{poiName,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=REAL},
      longitude = #{longitude,jdbcType=REAL},
      rate = #{rate,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getPoiAvgScore" resultType="map">
      SELECT
          poi_id,
          COUNT(poi_id) AS poiCount,
          AVG(rate) as avgScore
      FROM
          `check`
      GROUP BY
          poi_id
      ORDER BY
          poiCount DESC,avgScore DESC
      LIMIT 20;
  </select>

  <select id="selectCheckByUserId" parameterType="int" resultType="com.huanghe.lbsn.Entity.Check">
    SELECT * from `check` where user_id=#{userId}
  </select>

  <select id="getCheckIn" resultType="map">
    SELECT
        user_id As userId,
        poi_id As poiId,
        COUNT(poi_id) AS count,
        AVG(rate) AS rate
    FROM
        `check`
    GROUP BY
        user_id,
        poi_id;
  </select>

  <select id="getUserCheckCount" resultType="map">
    SELECT
        user_id,
        GROUP_CONCAT(poi_id) AS poi_id,
        GROUP_CONCAT(count) AS count
    FROM
        temp
    GROUP BY
        user_id
  </select>

  <select id="getPoiNumsAndAvgScore" parameterType="int" resultType="map">
    SELECT
        poi_id,
        COUNT(poi_id) AS commentNums,
        AVG(rate) AS averageScore
    FROM
        `check`
    WHERE
        poi_id = #{poiId}
    GROUP BY
        poi_id
  </select>

  <select id="getCommentListByPoiId" parameterType="int" resultType="map">
    SELECT
        id AS commentId,
        content AS commentContent,
        rate AS score,
        createTime AS time,
        mobile as mobile

    FROM
        `check`,
        `user`
    WHERE
        poi_id = #{poiId}
    AND `user`.userId = `check`.user_id
    ORDER BY
        createTime
  </select>

  <select id="getCheckByUserIdAndPoiId" parameterType="map" resultType="map">
    SELECT * FROM `check` WHERE user_id =#{userId} AND poi_id=#{poiId}
  </select>

  <insert id="insertCheck" parameterType="com.huanghe.lbsn.Entity.Check">
    INSERT INTO `check` (
        user_id,
        poi_id,
        poi_name,
        longitude,
        latitude,
        rate,
        content,
        createTime
    )
    VALUES
        (
            #{userId},
            #{poiId},
            #{poiName},
            #{longitude},
            #{latitude},
            #{rate},
            #{content},
            #{createtime}
        )
  </insert>
</mapper>